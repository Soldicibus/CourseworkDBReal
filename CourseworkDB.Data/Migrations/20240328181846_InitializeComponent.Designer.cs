// <auto-generated />
using System;
using CourseworkDB.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CourseworkDB.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240328181846_InitializeComponent")]
    partial class InitializeComponent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CourseworkDB.Data.Models.Ad", b =>
                {
                    b.Property<int>("AdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdCampaignCampaignId")
                        .HasColumnType("int");

                    b.Property<string>("AdDescription")
                        .HasColumnType("longtext");

                    b.Property<int?>("AdGroupGroupId")
                        .HasColumnType("int");

                    b.Property<string>("AdTitle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AdTypeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("AdUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AdId");

                    b.HasIndex("AdCampaignCampaignId");

                    b.HasIndex("AdGroupGroupId");

                    b.HasIndex("AdTypeTypeId");

                    b.ToTable("Ads");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.AdCampaign", b =>
                {
                    b.Property<int>("CampaignId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdStatusStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("AdvertiserId")
                        .HasColumnType("int");

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("TotalBudget")
                        .HasColumnType("float");

                    b.HasKey("CampaignId");

                    b.HasIndex("AdStatusStatusId");

                    b.HasIndex("AdvertiserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("PublisherId");

                    b.ToTable("AdCampaigns");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.AdGroup", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdCampaignCampaignId")
                        .HasColumnType("int");

                    b.Property<string>("Audience")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("BidAmount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("GroupId");

                    b.HasIndex("AdCampaignCampaignId");

                    b.ToTable("AdGroups");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.AdStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("StatusDesc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StatusId");

                    b.ToTable("AdStatuses");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.AdType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TypeDesc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("TypeId");

                    b.ToTable("AdTypes");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Advertiser", b =>
                {
                    b.Property<int>("AdvertiserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AdvertiserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Advertisers");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CompanyEmail")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyPhone")
                        .HasColumnType("longtext");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("WebsiteURL")
                        .HasColumnType("longtext");

                    b.HasKey("PublisherId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Ad", b =>
                {
                    b.HasOne("CourseworkDB.Data.Models.AdCampaign", "AdCampaign")
                        .WithMany("Ads")
                        .HasForeignKey("AdCampaignCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseworkDB.Data.Models.AdGroup", null)
                        .WithMany("Ads")
                        .HasForeignKey("AdGroupGroupId");

                    b.HasOne("CourseworkDB.Data.Models.AdType", "AdType")
                        .WithMany()
                        .HasForeignKey("AdTypeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdCampaign");

                    b.Navigation("AdType");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.AdCampaign", b =>
                {
                    b.HasOne("CourseworkDB.Data.Models.AdStatus", "AdStatus")
                        .WithMany()
                        .HasForeignKey("AdStatusStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseworkDB.Data.Models.Advertiser", null)
                        .WithMany("AdCampaigns")
                        .HasForeignKey("AdvertiserId");

                    b.HasOne("CourseworkDB.Data.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseworkDB.Data.Models.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdStatus");

                    b.Navigation("Company");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.AdGroup", b =>
                {
                    b.HasOne("CourseworkDB.Data.Models.AdCampaign", "AdCampaign")
                        .WithMany("AdGroups")
                        .HasForeignKey("AdCampaignCampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdCampaign");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Advertiser", b =>
                {
                    b.HasOne("CourseworkDB.Data.Models.Company", null)
                        .WithMany("Advertisers")
                        .HasForeignKey("CompanyId");

                    b.HasOne("CourseworkDB.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Publisher", b =>
                {
                    b.HasOne("CourseworkDB.Data.Models.Company", null)
                        .WithMany("Publishers")
                        .HasForeignKey("CompanyId");

                    b.HasOne("CourseworkDB.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.UserRole", b =>
                {
                    b.HasOne("CourseworkDB.Data.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CourseworkDB.Data.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.AdCampaign", b =>
                {
                    b.Navigation("AdGroups");

                    b.Navigation("Ads");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.AdGroup", b =>
                {
                    b.Navigation("Ads");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Advertiser", b =>
                {
                    b.Navigation("AdCampaigns");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Company", b =>
                {
                    b.Navigation("Advertisers");

                    b.Navigation("Publishers");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("CourseworkDB.Data.Models.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
